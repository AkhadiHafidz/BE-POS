// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model category {
  id           Int       @id @default(autoincrement())
  kategoryName String
  product      product[]
}

model product {
  id                Int                 @id @default(autoincrement())
  code              String              @unique
  barcode           String?
  productName       String
  image             String
  url               String
  qty               Int
  price             Decimal
  kategoryId        Int
  supplierId        Int
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  kategory          category            @relation(fields: [kategoryId], references: [id])
  supplier          supplier            @relation(fields: [supplierId], references: [id])
  carts             carts[]
  orderdetail       orderdetail[]
  orderreturndetail orderreturndetail[]
  purchasedetail    purchasedetail[]
}

model supplier {
  id        Int       @id @default(autoincrement())
  firstName String
  lastName  String?
  phone     String
  email     String?
  address   String
  product   product[]
}

model carts {
  id          Int     @id @default(autoincrement())
  price       Decimal
  productName String
  qty         Int
  totalPrice  Decimal
  note        String
  productId   Int
  userId      Int
  user        user    @relation(fields: [userId], references: [id])
  product     product @relation(fields: [productId], references: [id])
}

model orders {
  id          Int           @id @default(autoincrement())
  date        DateTime      @default(now())
  code        String        @unique
  total       Decimal
  ppn         Decimal
  grandTotal  Decimal
  userId      Int
  user        user          @relation(fields: [userId], references: [id])
  orderdetail orderdetail[]
  orderreturn orderreturn[]
}

model orderdetail {
  id          Int     @id @default(autoincrement())
  price       Decimal
  productName String
  qty         Int
  totalPrice  Decimal
  note        String
  productId   Int
  orderId     Int
  order       orders  @relation(fields: [orderId], references: [id])
  product     product @relation(fields: [productId], references: [id])
}

model user {
  id          Int           @id @default(autoincrement())
  userName    String        @unique
  password    String
  name        String
  role        String
  carts       carts[]
  Orders      orders[]
  Orderreturn orderreturn[]
  purchase    purchase[]
}

model orderreturn {
  id                Int                 @id @default(autoincrement())
  code              String
  date              DateTime            @default(now())
  note              String?
  orderId           Int
  userId            Int
  user              user                @relation(fields: [userId], references: [id])
  order             orders              @relation(fields: [orderId], references: [id])
  orderreturndetail orderreturndetail[]
}

model orderreturndetail {
  id          Int         @id @default(autoincrement())
  productId   Int
  productName String
  price       Decimal
  qty         Int
  total       Decimal
  returnId    Int
  orderreturn orderreturn @relation(fields: [returnId], references: [id])
  product     product     @relation(fields: [productId], references: [id])
}

model purchase {
  id             Int              @id @default(autoincrement())
  code           String
  date           DateTime
  note           String
  total          Decimal
  ppn            Decimal
  grandTotal     Decimal
  userId         Int
  user           user             @relation(fields: [userId], references: [id])
  purchasedetail purchasedetail[]
}

model purchasedetail {
  id          Int      @id @default(autoincrement())
  productId   Int
  productName String
  price       Decimal
  qty         Int
  total       Decimal
  purchaseId  Int
  purchase    purchase @relation(fields: [purchaseId], references: [id])
  product     product  @relation(fields: [productId], references: [id])
}
